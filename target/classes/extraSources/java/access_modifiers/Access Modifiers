In java, access modifiers are keywords that determine the visibility or
accessibility of classes, methods, and other members within a program.
There are four access modifiers in java:

Public:
Members declared as public are accessible from any other class.
There are no restrictions on accessing public members.

public class MyClass {
    public int publicVariable;
    public void publicMethod() {
        // Code here
    }
}

Private:
Members declared as private are only accessible within the same class.
They are not visible or accessible from outside the class.

public class MyClass {
    private int privateVariable;
    private void privateMethod() {
        // Code here
    }
}

Protected:
Members declared as protected are accessible within the same class, as well as
in subclasses. They are also accessible in the same package, but not outside
the package unless the subclass is in a different package.

public class MyClass {
    protected int protectedVariable;
    protected void protectedMethod() {
        // Code here
    }
}

Default (Package-Private):
If no access modifier is specified (default), it is also known as package-private.
Members with default access are accessible only within the same package.
They are not visible outside the package.

class MyClass {

    int defaultVariable;
    void defaultMethod() {
        // Code here
    }
}

It's essential to choose the appropriate access level based on the design
and encapsulation principles of your program. Public and private modifiers,
in particular, help control the visibility of members and contribute to
encapsulation, a fundamental concept in object-oriented programming.